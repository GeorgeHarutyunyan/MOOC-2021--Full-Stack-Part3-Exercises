{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","services/persons-services.js","components/SuccessNotification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Person","_ref","person","deletePerson","react_default","a","createElement","name","number","onClick","Persons","persons","query","filteredSearch","filter","toLowerCase","includes","map","components_Person","id","key","Filter","value","onChange","baseURL","persons_services","axios","get","then","response","console","log","data","personObject","post","concat","delete","newObject","put","SuccessNotification","message","className","ErrorNotification","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","searchValue","setSearchValue","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","successMessage","setSuccessMessage","useEffect","personService","catch","error","resetNotification","setTimeout","handleDuplicateEntry","window","confirm","find","p","updatedPersonObject","objectSpread","components_SuccessNotification","components_ErrorNotification","components_Filter","event","target","onSubmit","preventDefault","newPerson","some","ele","type","components_Persons","ReactDOM","render","src_App","notes","content","date","important","document","getElementById"],"mappings":"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","file":"static/js/main.5d0ac451.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person,deletePerson }) => {\r\n    return (\r\n        <li>{person.name} {person.number}\r\n            <button onClick={deletePerson}>DELETE</button>\r\n        </li>\r\n    )\r\n  }\r\n  \r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\n\r\n\r\nconst Persons = ({persons,query,deletePerson}) => {\r\n    const filteredSearch = persons.filter(person => person.name.toLowerCase().includes(query.toLowerCase()))\r\n    return <ul>{filteredSearch.map(person => <Person person={person} deletePerson={() => deletePerson(person.id)} key={person.name}/>)}</ul>\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\n\r\nconst Filter = ({value,onChange}) => {\r\n    return (\r\n        <div>filter shown with: <input value={value} onChange={onChange}/></div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(\r\n        response => {\r\n            console.log('persons:',response.data)\r\n            return response.data\r\n        })\r\n}\r\n\r\nconst createPerson = personObject => {\r\n    const request = axios.post(`${baseURL}`,personObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id,newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll,createPerson,deletePerson,updatePerson}\r\n\r\n","import React from 'react'\r\n\r\nconst SuccessNotification = ({ message }) => {\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n           \r\n    )\r\n}\r\n\r\nexport default SuccessNotification","import React from 'react'\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n           \r\n    )\r\n}\r\n\r\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons-services'\r\nimport SuccessNotification from './components/SuccessNotification'\r\nimport ErrorNotification from './components/ErrorNotification'\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([]) \r\n\tconst [newName, setNewName ] = useState('')\r\n\tconst [newNumber,setNewNumber] = useState('')\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage,setSuccessMessage] = useState(null)\r\n\r\n\tuseEffect (() => {\r\n\t\tpersonService\r\n\t\t.getAll()\r\n\t\t.then(response => {\r\n            setPersons(response)\r\n            console.log('Persons in front: ',response)\r\n            })\r\n            .catch(error => {\r\n                console.log('Error getting persons',error)\r\n            })\r\n\t},[])\r\n\r\n    const resetNotification = () => {\r\n        setTimeout(() => {\r\n            setSuccessMessage(null)\r\n            setErrorMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n\tconst handleNewName = (event) => {\r\n\t\tsetNewName(event.target.value)\r\n\t  }\r\n\t  \r\n\tconst handleNewNumber = (event) => {\r\n\t\tsetNewNumber(event.target.value)\r\n\t}\r\n\r\n\tconst handleSearchValue = (event) => {\r\n\t\tsetSearchValue(event.target.value)\r\n\t}\r\n\r\n\tconst addNewPerson = (event) => {\r\n        event.preventDefault()\r\n\t\tconst newPerson = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber\r\n        }\r\n\t\tif (persons.some(ele => ele.name === newName)) { //checks for duplicate name entry\r\n\t\t\thandleDuplicateEntry(newName)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpersonService\r\n\t\t\t.createPerson(newPerson)\r\n\t\t\t.then(response => {\r\n                setSuccessMessage(`Successfully added ${newPerson.name} to the phonebook!`)\r\n                resetNotification()\r\n                setPersons(persons.concat(newPerson))\r\n                setNewName('')\r\n                setNewNumber('')\r\n                })\r\n            .catch(error => {\r\n                setErrorMessage(`Failed to add ${newPerson.name} to the phonebook!`)\r\n                resetNotification()\r\n                setPersons(persons.filter(p => p.name !== newPerson.name))\r\n                setNewName('')\r\n                setNewNumber('')\r\n                })\r\n\t\t\t}\r\n\t\t}\t\r\n\t\r\n\t\r\n\tconst handleDuplicateEntry = () => {\r\n\t\tif (window.confirm(`${newName} is already in the phonebook. Replace the old number with a new one?`)) {\r\n\t\t\tconst person = persons.find(p => p.name === newName)\r\n\t\t\tconst updatedPersonObject = {...person,number:newNumber}\r\n            personService.updatePerson(person.id, updatedPersonObject)\r\n                .then(response => {\r\n                    setSuccessMessage(`Successfully updated phone number for ${person.name}!`)\r\n                    resetNotification()\r\n                    setPersons(persons.map(p => p.name === newName ? updatedPersonObject : p))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(`Failed to update phone number for ${person.name}!`)\r\n                    resetNotification()\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n\t\t}\r\n\t}\r\n\r\n    const handleDeletePerson = id => {\r\n        if (window.confirm(`Delete ${persons.find(p => id === p.id).name} from the phonebook?`)) {\r\n            const person = persons.find(p => p.id === id)\r\n\t\t\tpersonService.deletePerson(id)\r\n    \t\t\t.then(response => {\r\n                    setSuccessMessage(`Successfully deleted ${person.name}`)\r\n                    resetNotification()\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(`${person.name} is already deleted from the phonebook!`)\r\n                    resetNotification()\r\n                    setPersons(persons.filter(p => p.id !== id)) //unnecessary? \r\n                })\r\n\t\t}\r\n\r\n    }\r\n\r\n\treturn (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <SuccessNotification message={successMessage} />\r\n            <ErrorNotification message={errorMessage}/>\r\n    \t\t<Filter value={searchValue} onChange={handleSearchValue}/>\r\n          \t<form onSubmit={addNewPerson}>\r\n            \t<div>\r\n    \t\t\t\tname: <input value={newName} onChange={handleNewName}/>\r\n    \t\t\t\t<br/>\r\n    \t\t\t\tnumber: <input value={newNumber} onChange={handleNewNumber}/>\r\n            \t</div>\r\n            \t<div>\r\n              \t\t<button type=\"submit\">add</button>\r\n            \t</div>\r\n          \t</form>\r\n          \t<h2>Numbers</h2>\r\n            <Persons persons={persons} deletePerson={handleDeletePerson} query={searchValue}/>\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nconst notes = [\r\n  {\r\n    id: 1,\r\n    content: 'HTML is easy',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true\r\n  },\r\n  {\r\n    id: 2,\r\n    content: 'Browser can execute only Javascript',\r\n    date: '2019-05-30T18:39:34.091Z',\r\n    important: false\r\n  },\r\n  {\r\n    id: 3,\r\n    content: 'GET and POST are the most important methods of HTTP protocol',\r\n    date: '2019-05-30T19:20:14.298Z',\r\n    important: true\r\n  }\r\n]\r\n\r\nReactDOM.render(\r\n  <App notes={notes}/>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}